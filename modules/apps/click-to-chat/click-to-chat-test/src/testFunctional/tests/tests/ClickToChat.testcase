@component-name = "portal-solutions"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Click to Chat";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@priority = "5"
	test EnableAndDisableJivoChat {
		property portal.acceptance = "true";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Click to Chat",
			configurationName = "Click to Chat Configuration",
			configurationScope = "Virtual Instance Scope");

		FormFields.enableCheckbox(fieldName = "enabled");

		Select(
			locator1 = "ClickToChatConfiguration#SITE_SETTINGS_STRATEGY",
			value1 = "Always Inherit");

		Select(
			locator1 = "ClickToChatConfiguration#CHAT_PROVIDER_ID",
			value1 = "JivoChat");

		var clickToChatJivochatPassword = PropsUtil.get("click.to.chat.jivochat.password");

		Type(
			locator1 = "ClickToChatConfiguration#CHAT_PROVIDER_ACCOUNT_ID",
			value1 = "${clickToChatJivochatPassword}");

		SystemSettings.saveConfiguration();

		Refresh();

		AssertElementPresent(locator1 = "Providers#CHAT_JIVOCHAT");

		FormFields.disableCheckbox(fieldName = "enabled");

		SystemSettings.saveConfiguration();

		Refresh();

		AssertElementNotPresent(locator1 = "Providers#CHAT_JIVOCHAT");
	}

	@priority = "5"
	test EnableAndDisableLivePerson {
		property portal.acceptance = "true";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Click to Chat",
			configurationName = "Click to Chat Configuration",
			configurationScope = "Virtual Instance Scope");

		FormFields.enableCheckbox(fieldName = "enabled");

		Select(
			locator1 = "ClickToChatConfiguration#SITE_SETTINGS_STRATEGY",
			value1 = "Always Inherit");

		Select(
			locator1 = "ClickToChatConfiguration#CHAT_PROVIDER_ID",
			value1 = "Liveperson");

		var clickToChatLivepersonPassword = PropsUtil.get("click.to.chat.liveperson.password");

		Type(
			locator1 = "ClickToChatConfiguration#CHAT_PROVIDER_ACCOUNT_ID",
			value1 = "${clickToChatLivepersonPassword}");

		SystemSettings.saveConfiguration();

		Refresh();

		AssertElementPresent(locator1 = "Providers#CHAT_LIVEPERSON");

		FormFields.disableCheckbox(fieldName = "enabled");

		SystemSettings.saveConfiguration();

		Refresh();

		AssertElementNotPresent(locator1 = "Providers#CHAT_LIVEPERSON");
	}

	@priority = "4"
	test HideChatProvider {
		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Click to Chat",
			configurationName = "Click to Chat Configuration",
			configurationScope = "Virtual Instance Scope");

		FormFields.enableCheckbox(fieldName = "enabled");

		Select(
			locator1 = "ClickToChatConfiguration#SITE_SETTINGS_STRATEGY",
			value1 = "Always Override");

		AssertNotVisible(locator1 = "ClickToChatConfiguration#CHAT_PROVIDER_ID");

		AssertNotVisible(locator1 = "ClickToChatConfiguration#CHAT_PROVIDER_ACCOUNT_ID");
	}

}