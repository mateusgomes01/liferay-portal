@component-name = "portal-segmentation"
definition {

	property custom.properties = "jsonws.web.service.paths.excludes=";
	property osgi.module.configuration.file.names = "com.liferay.portal.security.sso.token.configuration.TokenConfiguration.config";
	property osgi.module.configurations = "enabled=&quot;true&quot;${line.separator}tokenLocation=&quot;REQUEST&quot;";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Segmentation";

	setUp {
		TestCase.setUpPortalInstance(freeLogin = "true");

		User.firstLoginPG(freeLogin = "true");

		for (var num : list "1,2") {
			JSONUser.addUser(
				jobTitle = "Test Engineer${num}",
				userEmailAddress = "userea${num}@liferay.com",
				userFirstName = "userfn${num}",
				userLastName = "userln${num}",
				userScreenName = "usersn${num}");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea${num}@liferay.com");

			JSONRole.assignRoleToUser(
				roleTitle = "Administrator",
				userEmailAddress = "userea${num}@liferay.com");
		}

		JSONOrganization.addOrganization(organizationName = "organization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "organization Name",
			userEmailAddress = "userea2@liferay.com");

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Experience Content Page",
			type = "content");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Site.tearDownCP();
		}
	}

	@description = "When the user creates a new experience, it is always placed in the last position of the list, always below the default experience and always set as non-active"
	@priority = "5"
	test AddNewAnyoneExperience {
		property portal.acceptance = "true";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Default");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "NewAnyoneExperience",
			segmentName = "Anyone");

		Refresh();

		PageEditor.changeExperience(newExperience = "NewAnyoneExperience");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Anyone1");

		Button.clickPublish();

		User.logoutPG();

		Navigator.gotoSitePage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Default");

		User.firstLoginPG();
	}

	@description = "The Add new experience modals appears after click on cancel in the Edit experience modal"
	@priority = "5"
	test AddNewExperienceAfterCancelEdit {
		property portal.acceptance = "true";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "NewExp1",
			segmentName = "Anyone");

		Refresh();

		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");

		Click(locator1 = "PageEditor#EXPERIENCE_EDIT_BUTTON");

		AssertClick(
			locator1 = "Button#CANCEL",
			value1 = "Cancel");

		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");

		Click(
			key_text = "New Experience",
			locator1 = "Button#ANY");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "PageEditor#EXPERIENCE_NEW_EXPERIENCE_MODAL_TITLE",
			value1 = "New Experience");

		AssertTextEquals(
			locator1 = "PageEditor#EXPERIENCE_NAME",
			value1 = "");

		AssertClick(
			locator1 = "Button#CANCEL",
			value1 = "Cancel");

		PageEditor.clickPublish();
	}

	@description = "This is a test for LPS-130348."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceBasedOtherSegmentsSegment {
		property portal.acceptance = "false";

		// TODO LPS-130348 AddNewExperienceBasedOtherSegmentsSegment pending implementation

	}

	@description = "This is a test for LPS-130309."
	@priority = "5"
	test AddNewExperienceOrganizationCountrySegment {
		property portal.acceptance = "false";

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Organization.editOrganizationCP(orgName = "organization Name");

		Select(
			locator1 = "Select#COUNTRY",
			value1 = "China");

		PortletEntry.save();

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.selectOrganization();

		Segmentation.addProperties(propertyOption = "Country");

		Segmentation.fillTitle(titleField = "Org with Country");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(optionsValue = "China");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Org with Country",
			segmentName = "Org with Country");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Org with Country");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Org with Country");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130302."
	@priority = "5"
	test AddNewExperienceOrganizationDateModifiedSegment {
		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.selectOrganization();

		Segmentation.addProperties(propertyOption = "Date Modified");

		Segmentation.fillTitle(titleField = "Org with Date Modified");

		Segmentation.changeCriterionInput(criterionInputOption = "Not Equals");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Org with Modified Date",
			segmentName = "Org with Date Modified");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Org with Modified Date");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Org with Modified Date");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130303."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceOrganizationHierarchyPathSegment {
		property portal.acceptance = "false";

		// TODO LPS-130303 AddNewExperienceOrganizationHierarchyPathSegment pending implementation
	}

	@description = "This is a test for LPS-130304."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceOrganizationNameSegment {
		property portal.acceptance = "false";

		// TODO LPS-130304 AddNewExperienceOrganizationNameSegment pending implementation
	}

	@description = "This is a test for LPS-130306."
	@priority = "5"
	test AddNewExperienceOrganizationOrganizationSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.selectOrganization();

		Segmentation.addProperties(propertyOption = "Organization");

		Segmentation.fillTitle(titleField = "Users In A Specific Org");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.assignOrganization(orgName = "organization Name");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Users In A Specific Org",
			segmentName = "Users In A Specific Org");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Users In A Specific Org");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Users In A Specific Org");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130307."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceOrganizationParentOrganizationSegment {
		property portal.acceptance = "false";

		// TODO LPS-130307 AddNewExperienceOrganizationParentOrganizationSegment pending implementation
	}

	@description = "This is a test for LPS-130310."
	@priority = "5"
	test AddNewExperienceOrganizationRegionSegment {
		property portal.acceptance = "false";

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Organization.editOrganizationCP(orgName = "organization Name");

		Select(
			locator1 = "Select#COUNTRY",
			value1 = "United States");

		Select(
			locator1 = "Select#REGION",
			value1 = "Utah");

		PortletEntry.save();

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.selectOrganization();

		Segmentation.addProperties(propertyOption = "Region");

		Segmentation.fillTitle(titleField = "Org with Region");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(optionsValue = "United States - Utah");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Org with Region",
			segmentName = "Org with Region");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Org with Region");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Org with Region");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130311."
	@priority = "5"
	test AddNewExperienceOrganizationTagSegment {
		property portal.acceptance = "false";

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Organization.editOrganizationCP(orgName = "organization Name");

		AssetCategorization.addTag(tagName = "tagName");

		PortletEntry.save();

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.selectOrganization();

		Segmentation.addProperties(propertyOption = "Tag");

		Segmentation.fillTitle(titleField = "Org with Tag");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(tagName = "tagname");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Org with Tag",
			segmentName = "Org with Tag");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Org with Tag");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Org with Tag");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130308."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceOrganizationTypeSegment {
		property portal.acceptance = "false";

		// TODO LPS-130308 AddNewExperienceOrganizationTypeSegment pending implementation
	}

	@description = "This is a test for LPS-130327."
	@priority = "5"
	test AddNewExperienceSessionBrowserSegment {
		property portal.acceptance = "false";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Segments");

		LexiconEntry.gotoAdd();

		Segmentation.selectSession();

		Segmentation.addProperties(propertyOption = "Browser");

		Segmentation.fillTitle(titleField = "Session Browser Segment");

		Segmentation.fillProperty(propertyField = "Chrome");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Default");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "NewBrowserExperience",
			segmentName = "Session Browser Segment");

		Refresh();

		PageEditor.changeExperience(newExperience = "NewBrowserExperience");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Chrome Browser Heading");

		PageEditor.prioritizeExperience(experienceName = "NewBrowserExperience");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		Navigator.gotoSitePage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		var browserType = PropsUtil.get("browser.type");

		if ("${browserType}" == "chrome") {
			AssertTextEquals(
				locator1 = "Experience#FRAGMENT_HEADING",
				value1 = "Chrome Browser Heading");
		}

		else {
			AssertTextEquals(
				locator1 = "Experience#FRAGMENT_HEADING",
				value1 = "Default");
		}
	}

	@description = "This is a test for LPS-130328."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionCookiesSegment {
		property portal.acceptance = "false";

		// TODO LPS-130328 AddNewExperienceSessionCookiesSegment pending implementation
	}

	@description = "This is a test for LPS-130329."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionDeviceBrandSegment {
		property portal.acceptance = "false";

		// TODO LPS-130329 AddNewExperienceSessionDeviceBrandSegment pending implementation
	}

	@description = "This is a test for LPS-130330."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionDeviceModelSegment {
		property portal.acceptance = "false";

		// TODO LPS-130330 AddNewExperienceSessionDeviceModelSegment pending implementation
	}

	@description = "This is a test for LPS-130331."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionDeviceScreenResolutionHeightSegment {
		property portal.acceptance = "false";

		// TODO LPS-130331 AddNewExperienceSessionDeviceScreenResolutionHeightSegment pending implementation
	}

	@description = "This is a test for LPS-130332."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionDeviceScreenResolutionWidthSegment {
		property portal.acceptance = "false";

		// TODO LPS-130332 AddNewExperienceSessionDeviceScreenResolutionWidthSegment pending implementation
	}

	@description = "This is a test for LPS-130333."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionHostnameSegment {
		property portal.acceptance = "false";

		// TODO LPS-130333 AddNewExperienceSessionHostnameSegment pending implementation
	}

	@description = "This is a test for LPS-130334."
	@priority = "5"
	test AddNewExperienceSessionLanguageSegment {
		property portal.acceptance = "false";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Segments");

		LexiconEntry.gotoAdd();

		Segmentation.selectSession();

		Segmentation.addProperties(propertyOption = "Language");

		Segmentation.fillTitle(titleField = "Session Language Segment");

		Click(
			key_criterionInputOption = "Spanish (Spain)",
			locator1 = "Segmentation#CRITERION_INPUT_OPTION");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Text in English");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperienceWithLanguage(
			experienceName = "NewLanguageExperience",
			language = "Spanish",
			segmentName = "Session Language Segment");

		Refresh();

		PageEditor.changeExperienceLanguage(
			language = "es-ES",
			newExperience = "NewLanguageExperience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Texto en Español");

		PageEditor.prioritizeExperience(experienceName = "NewLanguageExperience");

		Button.clickPublish();

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editDisplaySettingsCP(
			languageName = "español (España)",
			userScreenName = "usersn1");

		User.logoutPG();

		Navigator.gotoSitePage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Text in english");

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.gotoSitePage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Texto en Español");

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");
	}

	@description = "This is a test for LPS-130335."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionLastSignInDateSegment {
		property portal.acceptance = "false";

		// TODO LPS-130335 AddNewExperienceSessionLastSignInDateSegment pending implementation
	}

	@description = "This is a test for LPS-130336."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionLocalDateSegment {
		property portal.acceptance = "false";

		// TODO LPS-130336 AddNewExperienceSessionLocalDateSegment pending implementation
	}

	@description = "This is a test for LPS-130337."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionReferrerURLSegment {
		property portal.acceptance = "false";

		// TODO LPS-130337 AddNewExperienceSessionReferrerURLSegment pending implementation
	}

	@description = "This is a test for LPS-130338."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionRequestParametersSegment {
		property portal.acceptance = "false";

		// TODO LPS-130338 AddNewExperienceSessionRequestParametersSegment pending implementation
	}

	@description = "This is a test for LPS-130339."
	@priority = "5"
	test AddNewExperienceSessionSignedInSegment {
		property portal.acceptance = "false";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Segments");

		LexiconEntry.gotoAdd();

		Segmentation.selectSession();

		Segmentation.addProperties(propertyOption = "Signed In");

		Segmentation.fillTitle(titleField = "Session Signed In Segment");

		Select(
			key_criterion = "options",
			locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
			value1 = "FALSE");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Default");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "NewSignedInExperience",
			segmentName = "Session Signed In Segment");

		Refresh();

		PageEditor.changeExperience(newExperience = "NewSignedInExperience");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "No Signed In Heading");

		PageEditor.prioritizeExperience(experienceName = "NewSignedInExperience");

		Button.clickPublish();

		User.logoutPG();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "No Signed In Heading");
	}

	@description = "This is a test for LPS-130340."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionURLSegment {
		property portal.acceptance = "false";

		// TODO LPS-130340 AddNewExperienceSessionURLSegment pending implementation
	}

	@description = "This is a test for LPS-130341."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceSessionUserAgentSegment {
		property portal.acceptance = "false";

		// TODO LPS-130341 AddNewExperienceSessionUserAgentSegment pending implementation
	}

	@description = "This is a test for LPS-130293."
	@priority = "5"
	test AddNewExperienceUserDateModifiedSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Date Modified");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Not Equals");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "3 Members");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is heading for the new experience");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is heading for the new experience");
	}

	@description = "This is a test for LPS-130294."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceUserDateOfBirthSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Date of Birth");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Less Than");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "3 Members");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is heading for the new experience");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is heading for the new experience");
	}

	@description = "This is a test for LPS-130301."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceUserEmailAddressSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Email Address");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "userea1@liferay.com");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130295."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceUserFirstNameSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "First Name");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "userfn1");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130296."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceUserJobTitleSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Job Title");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "Test Engineer1");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130297."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceUserLastNameSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Last Name");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "userln1");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130298."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceUserNameSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Name");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "userfn1 userln1");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130299."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceUserRoleSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Regular Role");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(selectRole = "Administrator");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "3 Members");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130300."
	@ignore = "true"
	@priority = "5"
	test AddNewExperienceUserScreenNameSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Screen Name");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "usersn1");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "When the user opens the experiences selection modal and select a different locale for an experience, the experience version for that language is shown"
	@priority = "5"
	test AddNewExperienceWithLanguage {
		property portal.acceptance = "true";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Text in english");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperienceWithLanguage(
			experienceName = "NewAnyoneExperience",
			language = "Spanish",
			segmentName = "Anyone");

		Refresh();

		PageEditor.changeExperienceLanguage(
			language = "es-ES",
			newExperience = "NewAnyoneExperience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Texto en español");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "NewAnyoneExperience");

		PageEditor.prioritizeExperience(experienceName = "NewAnyoneExperience");

		Button.clickPublish();

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			requirePasswordReset = "true",
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editDisplaySettingsCP(
			languageName = "español (España)",
			userScreenName = "usersn");

		User.logoutPG();

		Navigator.gotoSitePage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Text in english");

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		Navigator.gotoSitePage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Texto en español");

		User.firstLoginPG();
	}

	@description = "When the user clicks on the Duplicate option of an experience, a new experience with [the same name] + Copy and the same audience (Segment) appears in the last position of the list, always below the default experience"
	@priority = "5"
	test DuplicateExperience {
		property portal.acceptance = "true";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Default");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "NewExp1",
			segmentName = "Anyone");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "NewExp1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Exp1");

		PageEditor.prioritizeExperience(experienceName = "NewExp1");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "NewExp1");

		PageEditor.duplicateExperience(experienceName = "NewExp1");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "NewExp1 (Copy)");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Exp1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Exp1 Copy");

		PageEditor.changeExperience(newExperience = "NewExp1");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Exp1");

		PageEditor.clickPublish();
	}

	@description = "When the user duplicates an experience, the new experience has the same locales selected than the duplicated one"
	@priority = "5"
	test DuplicateExperienceWithLanguage {
		property portal.acceptance = "true";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Text in english");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperienceWithLanguage(
			experienceName = "NewAnyoneExperience",
			language = "Spanish",
			segmentName = "Anyone");

		Refresh();

		PageEditor.changeExperienceLanguage(
			language = "es-ES",
			newExperience = "NewAnyoneExperience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Texto en español");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "NewAnyoneExperience");

		PageEditor.duplicateExperience(experienceName = "NewAnyoneExperience");

		PageEditor.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.changeExperienceLanguage(
			language = "es-ES",
			newExperience = "NewAnyoneExperience (Copy)");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Texto en español");

		PageEditor.clickPublish();
	}

	@description = "Validate experience edition and deletion"
	@priority = "5"
	test EditAndDeleteExperience {
		property portal.acceptance = "true";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "exp1",
			segmentName = "Anyone");

		Refresh();

		PageEditor.editExperience(newExperience = "exp1_edited");

		PageEditor.deleteExperience(experienceName = "exp1_edited");

		PageEditor.clickPublish();
	}

}